name: Build debian packages

on:
  workflow_dispatch:
  release:
    types:
      - published

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  debian-package-amd64:
    name: "${{ matrix.distro }} ${{ matrix.release }} ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: "debian"
            release: "buster"
            arch: "amd64"
          - distro: "debian"
            release: "bullseye"
            arch: "amd64"
          - distro: "ubuntu"
            release: "bionic"
            arch: "amd64"
          - distro: "ubuntu"
            release: "focal"
            arch: "amd64"
    container:
      image: ${{ matrix.distro }}:${{ matrix.release }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apt-get update
          apt-get -y upgrade
          apt-get -y install devscripts dpkg-dev debhelper equivs
      - name: Install rustc
        # debian missing rustc > 1.50, we install it from ubuntu
        if: matrix.distro == 'debian'
        run: |
          curl -sSLO http://security.ubuntu.com/ubuntu/pool/universe/r/rustc/rustc_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb
          curl -sSLO http://security.ubuntu.com/ubuntu/pool/universe/r/rustc/libstd-rust-dev_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb
          curl -sSLO http://security.ubuntu.com/ubuntu/pool/universe/r/rustc/libstd-rust-1.53_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb
          dpkg -i rustc_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb libstd-rust-dev_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb libstd-rust-1.53_1.53.0+dfsg1+llvm-4ubuntu1~18.04.1_amd64.deb
      - name: Build package
        run: |
          mk-build-deps -i -r -t 'apt-get -f -y --no-install-recommends --force-yes'
          dpkg-buildpackage -b -us -uc -rfakeroot
      - name: Store package
        run: |
          artifact_dir=${{ matrix.distro }}_${{ matrix.release }}
          mkdir -p packages/${artifact_dir}
          cp ../*.deb packages/${artifact_dir}
      - name: Store artifacts for checking
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distro }} ${{ matrix.release }} ${{ matrix.arch }} packages
          path: packages/
          retention-days: 7

  debian-package-other:
    name: "${{ matrix.distro }} ${{ matrix.release }} ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    strategy:
      matrix:
        include:
          - distro: "debian"
            release: "bullseye"
            image: "bullseye"
            arch: "armv7"
          - distro: "debian"
            release: "bullseye"
            image: "bullseye"
            arch: "aarch64"
          - distro: "ubuntu"
            release: "bionic"
            image: "ubuntu18.04"
            arch: "armv7"
          - distro: "ubuntu"
            release: "bionic"
            image: "ubuntu18.04"
            arch: "aarch64"
          - distro: "ubuntu"
            release: "focal"
            image: "ubuntu20.04"
            arch: "armv7"
          - distro: "ubuntu"
            release: "focal"
            image: "ubuntu20.04"
            arch: "aarch64"
          - distro: "raspbian"
            release: "buster"
            image: "buster"
            arch: "armv7"
          - distro: "raspbian"
            release: "buster"
            image: "buster"
            arch: "aarch64"
          - distro: "raspbian"
            release: "bullseye"
            image: "bullseye"
            arch: "armv7"
          - distro: "raspbian"
            release: "bullseye"
            image: "bullseye"
            arch: "aarch64"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build artifact
        id: build
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.image }}
          shell: /bin/bash
          install: |
            apt-get update
            apt-get -y upgrade
            apt-get -y install devscripts dpkg-dev debhelper equivs
            if [ "${{ matrix.distro }}" == "debian"]; then
              DARCH=$(dpkg --print-architecture)
              curl -sSLO http://ports.ubuntu.com/pool/universe/r/rustc/rustc_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb
              curl -sSLO http://ports.ubuntu.com/pool/universe/r/rustc/libstd-rust-dev_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb
              curl -sSLO http://ports.ubuntu.com/pool/universe/r/rustc/libstd-rust-1.50_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb
              dpkg -i rustc_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb libstd-rust-dev_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb libstd-rust-1.50_1.50.0+dfsg1+llvm-0ubuntu5_$DARCH.deb
            fi
          run: |
            mkdir -p /build
            cp -r ${GITHUB_WORKSPACE} /build/package
            cd /build/package
            mk-build-deps -i -r -t 'apt-get -f -y --no-install-recommends --force-yes'
            dpkg-buildpackage -b -us -uc -rfakeroot
            artifact_dir=${{ matrix.distro }}_${{ matrix.release }}
            mkdir -p "${GITHUB_WORKSPACE}/packages/${artifact_dir}"
            cp ../*.deb "${GITHUB_WORKSPACE}/packages/${artifact_dir}"
      - name: Store artifacts for checking
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distro }} ${{ matrix.release }} ${{ matrix.arch }} packages
          path: packages/
          retention-days: 7
